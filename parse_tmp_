#include "scop.h"

static void	pack_vertex(char **tokens, t_obj *obj, uint32_t line_count, int i)
{
	int32_t		j = 3;
	int32_t		err;
	char		**index_data;
	uint32_t	index;
	t_veci3		v;

	while (--j > -1)
	{
		index = j == 2 ? 0 : i - j;
		index_data = ft_strsplit(tokens[index], '/');
		v[j] = ft_parse_int(index_data[0], &err) - 1;
		// vn[0] = ft_parse_int(index_data[1], &err) - 1;
		int v_index = ft_parse_int(index_data[0], &err) - 1;
		int vn_index = ft_parse_int(index_data[1], &err) - 1;
		t_vertex	vrt = {};
		vrt.point = obj->points[v_index];
		vrt.normal = obj->normals[vn_index];
		obj->vertices = ft_array_push(obj->vertices, &vrt, sizeof(t_vertex), obj->vertex_len++);
		free_2d_arr(index_data);
		if (err)
			throw_parsing_error(line_count, tokens[index], NULL);
	}
	obj->indices = ft_array_push(obj->indices, &v, sizeof(t_veci3), obj->indices_len++);
}

void		parse_index(char** tokens, t_obj *obj, uint32_t line_count)
{
	int		length;
	int		i;

	length = -1;
	while(tokens[++length])
		;
	if (length < 3)
		throw_parsing_error(line_count, tokens[length],
			"Expected at least 3 integer values.");
	i = 1;
	while (++i < length)
		pack_vertex(tokens, obj, line_count, i);
}
